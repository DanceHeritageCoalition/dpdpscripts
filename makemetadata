#!/bin/bash
# make metadata
version="0.2"
scriptdir=$(dirname $(which "$0"))
. "$scriptdir/dpdpfunctions" || { echo "Missing '$scriptdir/dpdpfunctions'. Exiting." ; exit 1 ;};
dependencies=(ffprobe mediainfo exiftool)
_initialize_make

usage(){
    echo
    echo "$(basename ${0}) ${version}"
    echo "This script may be run interactively by running it with no arguments or may be used with the following options."
    echo "Usage: $(basename $0) [ -m mediaid ]"
    echo "  -n (dry-run mode, show the commands that would be run but don't do anything)"
    echo "  -m mediaid"
    exit
}
[ "${#}" = 0 ] && usage

# command-line options to set mediaid and original variables
OPTIND=1
while getopts ":e:E:nh" opt ; do
    case "${opt}" in
        e) emailaddress_delivery="$OPTARG" && check_emailaddress "${emailaddress_delivery}" ;;
        E) emailaddress_outcome="$OPTARG" && check_emailaddress "${emailaddress_outcome}" ;;
        n) DRYRUN=true;;
        h) usage ;;
        *) echo "bad option -$OPTARG" ; usage ;;
        :) echo "Option -$OPTARG requires an argument" ; exit 1 ;;
    esac
done
shift $(( ${OPTIND} - 1 ))

_log -b
outputdir="./metadata/submissionDocumentation/fileMeta"
_run mkdir -p "$outputdir"

while [ "$*" != "" ] ; do
    uuid=$(uuidgen)
    package_path="$1"
    mediaid=$(basename "$package_path" | cut -d. -f1)
    pwd=$(pwd)
    cd "$package_path"
    FILELIST=$(maketemp)
    find "./objects" -type f ! -name ".*" > "$FILELIST"
    if [ -d ./objects/service ] ; then
        service_file=$(find "./objects/service" -maxdepth 1 -mindepth 1 -type f ! -name ".*")
        servicebasename=$(basename "$service_file")
    fi

    while read file ; do
        filenameroot=$(basename "$file")
        parentdir=$(dirname "$file")
        fileoutput="$outputdir/$parentdir"
        _run mkdir -p "$fileoutput"
        _run ffprobe 2> /dev/null "$file" -show_format -show_streams -show_data -show_error -show_versions -show_chapters -noprivate -of xml="q=1:x=1" > "$fileoutput/${filenameroot%.*}_ffprobe.xml"
        _run ffprobe 2> /dev/null "$file" -show_format -show_streams -show_data -show_error -show_versions -show_chapters -of json > "$fileoutput/${filenameroot%.*}_ffprobe.json"
        _run mediainfo --language=raw -f --output=XML "$file" > "$fileoutput/${filenameroot%.*}_mediainfo.xml"
        _run mediainfo --inform="Details;1" "$file" > "$fileoutput/${filenameroot%.*}_mediainfo_trace.txt"
        _run exiftool -X "$file" > "$fileoutput/${filenameroot%.*}_exiftool.xml"
        _run exiftool "$file" > "$fileoutput/${filenameroot%.*}_exiftool.txt"
    done < "$FILELIST"
    
    cd "$pwd"
    _run rm -r -f "$FILELIST"
    
    #set premis event variables
    eventIdentifierType="UUID"
    eventIdentifierValue=`uuid -v 4`
    eventType="makemetadata"
    eventDateTime=`date "+%FT%T"`
    eventDetail="Original objects are assessed with ffprobe and mediainfo"
    sourceLinkingObjectIdentifierType="URI"
    sourceLinkingObjectIdentifierValue="$file"
    outcomeLinkingObjectIdentifierType="UUID"
    outcomeLinkingObjectIdentifierValue=`uuid -v 4`
    linkingAgentRole="Executing program"

    #set premis agent variables
    agentIdentifierType="URI"
    agentIdentifierValue="http://github.com/bavc/DPDP_Scripts/blob/master/makemetadata"
    agentName="makemetadata (mediainfo and ffprobe)"
    agentType="software"
    linkingEventIdentifierType="$eventIdentifierType"
    linkingEventIdentifierValue="eventIdentifierValue"
    
    logs_path="./metadata/submissionDocumentation/logs"
    event_logs_path="$logs_path/$eventType"
    mkdir -p "$event_logs_path"
    
    cd "$startdir"
    [ ! -f "$package_path/metadata/premis.xml" ] && start_premis.sh "$package_path"
    premis_add_event.sh -x "$package_path/metadata/premis.xml" -i "$eventIdentifierType" -I "$eventIdentifierValue" -T "$eventType" -d "$eventDateTime" -D "$eventDetail" -E "$eventOutcome" -l "$agentIdentifierType" -L "$agentIdentifierValue" -r "$linkingAgentRole" -s "$sourceLinkingObjectIdentifierType" -S "$sourceLinkingObjectIdentifierValue" -o "URI" -O "./objects/access/${base%.*}.mp4"
    premis_add_agent.sh -x "$package_path/metadata/premis.xml" -i "$agentIdentifierType" -I "$agentIdentifierValue" -n "$agentName" -T "$agentType" -N "$agentNote" -l "$eventIdentifierType" -L "$eventIdentifierValue"
    shift
    _log -e
done
