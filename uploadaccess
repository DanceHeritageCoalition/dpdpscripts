#!/bin/bash

scriptdir=$(dirname $(which "$0"))
. "${scriptdir}/mmfunctions" || { echo "Missing '${scriptdir}/mmfunctions'. Exiting." ; exit 1 ;};
force=""

cleanup(){
    _log -a "Process aborted"
    exit 1
}

usage(){
    echo didnt write it yet
    exit
}

# command-line options to set mediaid and original variables
OPTIND=1
while getopts ":fh:" opt; do
    case "$opt" in
        f) force="Y" ;;
        h) usage ;;
        \?) echo "Invalid option: -$OPTARG" ; exit 1 ;;
        :) echo "Option -$OPTARG requires an argument" ; exit 1 ;;
    esac
done
shift $(( ${OPTIND} - 1 ))

package_path="${1}"
if [ -z "${package_path}" ]; then
    report -w "The path to the AIP package must be declared."
    exit 1
fi

trap cleanup SIGHUP SIGINT SIGTERM
_log -b

package_dir=$(dirname "${package_path}")
pkgname=$(basename "${package_path}")

pbcoreid=$(cat "${package_path}/metadata/submissionDocumentation/pbcoreurl.txt" | grep -o ........-....-....-....-............)
thumbnail_file=$(find "${package_path}/objects/access/" -type f \( -name '*.jpg' -o -name '*.jpeg' \) | head -n 1)
video_file=$(find "${package_path}/objects/access/" -type f -name '*.mp4' | head -n 1)
report -d "pbcoreid ${pbcoreid}"
report -d "thumbnail_file ${thumbnail_file}"
report -d "video_file ${video_file}"
if [ ! -n "${pbcoreid}" -o ! -s "${thumbnail_file}" -o ! -s "${video_file}" ] ; then
    report -w  "The upload script requires a valid pbcoreurl.txt file, thumbnail, and video proxy."
    exit 1
fi
if [ ! "$force" = "Y" ] ;then
    if [ $(curl "http://archive.danceheritage.org/assets/${pbcoreid}.xml" | grep "<formatDigital>video/mp4</formatDigital>") ] ; then
        report -w "The asset seems to already have an access copy at http://archive.danceheritage.org/assets/${pbcoreid}"
        exit 86
    elif [ -s "${1}/metadata/submissionDocumentation/logs/upload_log.txt" ] ; then
        report -w "An upload log already exists, upload cancelled."
        exit 1
    fi
fi
_log -e
